# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class UpdateDomainRequestBody < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # Whether to archive this domain. `false` will unarchive a previously archived domain.
      field :archived, T.nilable(T::Boolean), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('archived') } }
      # Redirect users to a specific URL when any link under this domain has expired.
      field :expired_url, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('expiredUrl') } }
      # Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.
      field :placeholder, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('placeholder') } }
      # Name of the domain.
      field :slug, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('slug') } }


      sig { params(archived: T.nilable(T::Boolean), expired_url: T.nilable(::String), placeholder: T.nilable(::String), slug: T.nilable(::String)).void }
      def initialize(archived: nil, expired_url: nil, placeholder: nil, slug: nil)
        @archived = archived
        @expired_url = expired_url
        @placeholder = placeholder
        @slug = slug
      end
    end
  end
end
