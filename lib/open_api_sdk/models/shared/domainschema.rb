# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  

    class DomainSchema < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # Whether the domain is archived.
      field :archived, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('archived') } }
      # The number of clicks on the domain.
      field :clicks, ::Float, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('clicks') } }
      # The URL to redirect to when a link under this domain has expired.
      field :expired_url, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('expiredUrl') } }
      # The unique identifier of the domain.
      field :id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }
      # Prevent search engines from indexing the domain.
      field :noindex, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('noindex') } }
      # Provide context to your teammates in the link creation modal by showing them an example of a link to be shortened.
      field :placeholder, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('placeholder') } }
      # Whether the domain is the primary domain for the workspace.
      field :primary, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('primary') } }
      # The domain name.
      field :slug, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('slug') } }
      # The page your users will get redirected to when they visit your domain.
      field :target, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('target') } }
      # The type of redirect to use for this domain.
      field :type, ::OpenApiSDK::Shared::Type, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::Type, false) } }
      # Whether the domain is verified.
      field :verified, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('verified') } }


      sig { params(archived: T::Boolean, clicks: ::Float, expired_url: ::String, id: ::String, noindex: T::Boolean, placeholder: ::String, primary: T::Boolean, slug: ::String, target: ::String, type: ::OpenApiSDK::Shared::Type, verified: T::Boolean).void }
      def initialize(archived: nil, clicks: nil, expired_url: nil, id: nil, noindex: nil, placeholder: nil, primary: nil, slug: nil, target: nil, type: nil, verified: nil)
        @archived = archived
        @clicks = clicks
        @expired_url = expired_url
        @id = id
        @noindex = noindex
        @placeholder = placeholder
        @primary = primary
        @slug = slug
        @target = target
        @type = type
        @verified = verified
      end
    end
  end
end
